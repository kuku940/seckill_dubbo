########################################################
###datasource 数据源配置
########################################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/seckill?useSSL=true&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123456

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20

# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000

# Oracle请使用select 1 from dual
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false

# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
spring.datasource.logSlowSql=true
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql:true;druid.stat.slowSqlMillis:5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

########################################################
### Mybatis 配置
########################################################
mybatis.mapper-locations=classpath*:mybatis/mapper/*.xml
mybatis.config-location=classpath:mybatis/mybatis-config.xml

########################################################
### logback配置
########################################################
logging.level.cn.xiaoyu.seckill=info
logging.level.cn.xiaoyu.seckill.dao=debug
logging.file=./seckill/target/log/seckill.log

###########################################################
##### Dubbo 服务提供者配置
# 如下配置完成后，当Seckill系统初始化的时候，就会扫描spring.dubbo.scan所指定的路径@Service注解
# 该注解标示了需要发布成RPC服务的类。
# Dubbo会将这些类的接口信息+本服务的IP+spring.dubbo.protocal.port所指定的端口号发送给zookeeper
# zookeeper会将这些信息存储起来，这就是服务的发布过程。
###########################################################
# 本服务名称
dubbo.application.name=seckill-provider
# zookeeper所在服务器的IP和端口号
dubbo.registry.address=zookeeper://127.0.0.1:2181
# RPC通信所采用的协议
dubbo.protocol.name=dubbo
# 本服务对外暴露的端口号
dubbo.protocol.port=20881
# 服务实现类所在的路径
dubbo.scan.basePackages=cn.xiaoyu.seckill.service.seckill

